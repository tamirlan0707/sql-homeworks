-- ===============================
-- üü¢ EASY-LEVEL TASKS (10)
-- ===============================

-- 1. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ DDL –∏ DML —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏
-- DDL (Data Definition Language) ‚Äî —è–∑—ã–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, –∏–∑–º–µ–Ω—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
-- –ü—Ä–∏–º–µ—Ä—ã: CREATE, ALTER, DROP
-- DML (Data Manipulation Language) ‚Äî —è–∑—ã–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏, –∏–∑–º–µ–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö.
-- –ü—Ä–∏–º–µ—Ä—ã: INSERT, UPDATE, DELETE

-- 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Employees
CREATE TABLE Employees (
    EmpID INT PRIMARY KEY,
    Name VARCHAR(50),
    Salary DECIMAL(10,2)
);

-- 3. –í—Å—Ç–∞–≤–∫–∞ —Ç—Ä–µ—Ö –∑–∞–ø–∏—Å–µ–π –≤ Employees
INSERT INTO Employees (EmpID, Name, Salary) VALUES 
    (1, 'John Doe', 5000.00),
    (2, 'Jane Smith', 6000.00),
    (3, 'Robert Brown', 5500.00);

-- 4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—Ä–ø–ª–∞—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å EmpID = 1
UPDATE Employees 
SET Salary = 5200.00 
WHERE EmpID = 1;

-- 5. –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ Employees, –≥–¥–µ EmpID = 2
DELETE FROM Employees
WHERE EmpID = 2;

-- 6. –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É DELETE, DROP –∏ TRUNCATE:
-- DELETE —É–¥–∞–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É.
-- TRUNCATE —É–¥–∞–ª—è–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É.
-- DROP —É–¥–∞–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª–Ω–æ—Å—Ç—å—é.

-- 7. –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö Name –≤ Employees
ALTER TABLE Employees
ALTER COLUMN Name VARCHAR(100);

-- 8. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞ Department
ALTER TABLE Employees
ADD Department VARCHAR(50);

-- 9. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ SSMS –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è CompanyDB (—Å–¥–µ–ª–∞—Ç—å –≤—Ä—É—á–Ω—É—é, –∑–∞—Ç–µ–º —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç).

-- 10. –û–ø–∏—Å–∞–Ω–∏–µ TRUNCATE TABLE:
-- TRUNCATE TABLE Employees; -- –æ—á–∏—â–∞–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏, –Ω–æ –Ω–µ —É–¥–∞–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É.

-- ===============================
-- üü† MEDIUM-LEVEL TASKS (10)
-- ===============================

-- 1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Departments —Å –≤–Ω–µ—à–Ω–∏–º –∫–ª—é—á–æ–º –Ω–∞ Employees
CREATE TABLE Departments (
    DeptID INT PRIMARY KEY,
    DeptName VARCHAR(50),
    ManagerID INT,
    FOREIGN KEY (ManagerID) REFERENCES Employees(EmpID)
);

-- 2. –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Departments –∏–∑ –¥—Ä—É–≥–æ–π —Ç–∞–±–ª–∏—Ü—ã
INSERT INTO Departments (DeptID, DeptName, ManagerID)
SELECT DepartmentID, DepartmentName, HeadID FROM OtherTable
WHERE DepartmentID <= 5;

-- 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π > 5000
UPDATE Employees
SET Department = 'Management'
WHERE Salary > 5000;

-- 4. –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ Employees –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
TRUNCATE TABLE Employees;

-- 5. –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É VARCHAR –∏ NVARCHAR:
-- VARCHAR —Ö—Ä–∞–Ω–∏—Ç —Å—Ç—Ä–æ–∫–∏ –≤ –æ–¥–Ω–æ–±–∞–π—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (ANSI), NVARCHAR ‚Äî –≤ Unicode (UTF-16).
-- NVARCHAR —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

-- 6. –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö Salary –Ω–∞ FLOAT
ALTER TABLE Employees
ALTER COLUMN Salary FLOAT;

-- 7. –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ Department –∏–∑ Employees
ALTER TABLE Employees
DROP COLUMN Department;

-- 8. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ SSMS –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è JoinDate (—Å–¥–µ–ª–∞—Ç—å –≤—Ä—É—á–Ω—É—é, –∑–∞—Ç–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç).

-- 9. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –∏ –≤—Å—Ç–∞–≤–∫–∞ –∑–∞–ø–∏—Å–µ–π
CREATE TABLE #TempEmployees (
    EmpID INT PRIMARY KEY,
    Name VARCHAR(50)
);

INSERT INTO #TempEmployees (EmpID, Name) VALUES 
    (1, 'Alice Johnson'),
    (2, 'Michael White');

-- 10. –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Departments
DROP TABLE Departments;

-- ===============================
-- üî¥ HARD-LEVEL TASKS (10)
-- ===============================

-- 1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Customers —Å CHECK (–≤–æ–∑—Ä–∞—Å—Ç > 18)
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    Name VARCHAR(100),
    Age INT CHECK (Age > 18)
);

-- 2. –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±–µ–∑ –ø–æ–≤—ã—à–µ–Ω–∏—è –∑–∞—Ä–ø–ª–∞—Ç—ã –∑–∞ 2 –≥–æ–¥–∞
DELETE FROM Employees
WHERE EmpID IN (
    SELECT EmpID 
    FROM SalaryHistory
    WHERE LastIncreaseDate <= DATEADD(YEAR, -2, GETDATE())
);

-- 3. –•—Ä–∞–Ω–∏–º–∞—è –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
CREATE PROCEDURE InsertEmployee
    @EmpID INT,
    @Name VARCHAR(100),
    @Salary DECIMAL(10,2)
AS
BEGIN
    INSERT INTO Employees (EmpID, Name, Salary)
    VALUES (@EmpID, @Name, @Salary);
END;

-- –í—ã–∑–æ–≤ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
EXEC InsertEmployee 4, 'Alice Johnson', 7000.00;

-- 4. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ç–∞–±–ª–∏—Ü—ã Employees
SELECT * INTO Employees_Backup
FROM Employees;

-- 5. –í—Å—Ç–∞–≤–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—Ç—Ä–æ–∫ —á–µ—Ä–µ–∑ MERGE INTO
MERGE INTO Employees AS Target
USING NewEmployees AS Source
ON Target.EmpID = Source.EmpID
WHEN MATCHED THEN 
    UPDATE SET Target.Salary = Source.Salary
WHEN NOT MATCHED THEN
    INSERT (EmpID, Name, Salary) VALUES (Source.EmpID, Source.Name, Source.Salary);

-- 6. –£–¥–∞–ª–µ–Ω–∏–µ –∏ –≤–æ—Å—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö CompanyDB
DROP DATABASE IF EXISTS CompanyDB;
CREATE DATABASE CompanyDB;

-- 7. –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ Employees –≤ StaffMembers
EXEC sp_rename 'Employees', 'StaffMembers';

-- 8. –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É CASCADE DELETE –∏ CASCADE UPDATE
CREATE TABLE Departments (
    DeptID INT PRIMARY KEY,
    DeptName VARCHAR(50)
);

CREATE TABLE Employees (
    EmpID INT PRIMARY KEY,
    Name VARCHAR(100),
    DeptID INT,
    FOREIGN KEY (DeptID) REFERENCES Departments(DeptID) 
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

-- 9. –°–±—Ä–æ—Å IDENTITY –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π
DBCC CHECKIDENT ('Employees', RESEED, 1);

-- 10. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å PRIMARY KEY –∏ UNIQUE
CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100) UNIQUE,
    Price DECIMAL(10,2)
);
